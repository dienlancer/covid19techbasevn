{"version":3,"sources":["constants/ActionType.js","actions/index.js","components/FormSearch.js","components/Notification.js","components/LoadingSpinnerComponent.js","pages/HomePage.js","api/fetch.js","route-config.js","components/App.js","reportWebVitals.js","reducers/notify.js","reducers/search.js","reducers/index.js","index.js"],"names":["CHANGE_SEARCH","SHOW_NOTIFY","HIDE_NOTIFY","actShowNotify","type","types","actHideNotify","FormSearch","props","handleChange","event","setState","country_name","target","value","handleSearch","goSearch","state","handleClear","handleShowNotify","showNotify","handleHideNotify","hideNotify","className","name","this","onChange","placeholder","onClick","Component","connect","query_country_name","search","dispatch","ownProps","actSearch","Notification","noti","isShow","notify","LoadingSpinnerComponent","usePromiseTracker","promiseInProgress","color","height","width","HomePage","covid19Items","covid19Html","length","trHtml","map","covid19Item","index","covid19ItemDate","format","Date","Cases","City","CityCode","Country","CountryCode","Lat","Lon","Province","Status","scope","countrySlug","data","url","trackPromise","method","Promise","resolve","reject","setTimeout","fetch","then","response","json","fetchWithDelay","covid19DataResponse","message","item","setCovid19data","nextProps","showCovid19List","routes","path","exact","main","App","showRoute","xhtml","route","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","action","appReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57b05ffb.chunk.js","sourcesContent":["export const CHANGE_SEARCH\t= 'CHANGE_SEARCH';\r\nexport const SHOW_NOTIFY \t\t= 'SHOW_NOTIFY';\r\nexport const HIDE_NOTIFY \t\t= 'HIDE_NOTIFY';","import * as types from './../constants/ActionType';\r\nexport const actSearch = (query_country_name) => {\r\n\treturn {\r\n\t\ttype : types.CHANGE_SEARCH,\r\n\t\tquery_country_name\r\n\t}\r\n}\r\nexport const actShowNotify=()=>{\t\r\n\treturn {\r\n\t\ttype:types.SHOW_NOTIFY\t\t\r\n\t}\r\n}\r\nexport const actHideNotify=()=>{\r\n\treturn {\r\n\t\ttype:types.HIDE_NOTIFY\t\t\r\n\t}\r\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {actSearch,actShowNotify,actHideNotify} from \"./../actions/index\";\nclass FormSearch extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tcountry_name:\"\",\t\t\t\n\t\t}\t\t\t\t\n\t}\n\thandleChange=(event)=>{\t\t\n\t\tthis.setState({country_name:event.target.value});\n\t}\n\thandleSearch=()=>{\t\t\n\t  this.props.goSearch(this.state.country_name);\n\t}\n\thandleClear=()=>{\n\t\tthis.props.goSearch(\"\");\n\t\tthis.setState({country_name:\"\"});\n\t}\t\t\t\t\n\thandleShowNotify=()=>{\t\t\n\t\tthis.props.showNotify();\n\t}\n\thandleHideNotify=()=>{\t\t\n\t\tthis.props.hideNotify();\n\t}\n\trender(){\t\t\t\t\t\t\t\t\t\t\t\n\t\treturn (\n\t\t\t<form className=\"form-search\">\t\t\t\t\t\n              <div className=\"form-group\">\t\n\t\t\t  <h1 className=\"text-center covid19-title\">COVID19 API TECHBASEVN TEST</h1>\n\t\t\t  <h6>Please type slug keyword of country : south-africa / china / palestine</h6>\t\t\t\t\n                <input name=\"country_name\" value={this.state.country_name} onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder=\"Enter slug of country ...\" />\n                <div className=\"input-group-btn btn-click\">\n                  <button type=\"button\" className=\"btn btn-danger\" onClick={this.handleSearch}>Search</button>\n                  <button type=\"button\" className=\"btn btn-warning\" onClick={this.handleClear}>Clear</button>\t\t\t\t  \n                </div>\n              </div>\n            </form>\t\n\t\t\t);\n\t\t}\n}\nconst mapStateToProps = state => {\t\n    return {\n        query_country_name: state.search\n    }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\t\n    return {\t\t\n        goSearch: (query_country_name) => {\t\t\t\n            dispatch(actSearch(query_country_name)) ;\n\t\t},\t\t\n\t\tshowNotify:()=>{\t\t\t\n\t\t\tdispatch(actShowNotify());\n\t\t},\n\t\thideNotify:()=>{\n\t\t\tdispatch(actHideNotify());\n\t\t}\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(FormSearch);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nclass Notification extends Component {\n\tconstructor(props){\n\t\tsuper(props);\t\t\t\t\t\t\n\t}\t\t\t\t\n\trender(){\t\n\t\tlet {noti}=this.props;\n\t\tif(noti.isShow===false) return false;\n\t\treturn (\n\t\t\t<div className=\"loading\">DATA LOADING...</div>          \n\t\t\t);\n\t\t}\n}\nconst mapStateToProps = state => {\t\t\n    return {\n        noti: state.notify\n    }\n}\nexport default connect(mapStateToProps, null)(Notification);\n","import React, {Component} from 'react';\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from \"react-loader-spinner\";\nexport const LoadingSpinnerComponent = (props) => {\n  const { promiseInProgress } = usePromiseTracker();\n  return (\n    promiseInProgress && (\n      <div className=\"spinner\">\n        <Loader type=\"BallTriangle\" color=\"#f03\" height={80} width={80} />\n      </div>\n    )\n  );\n};\n\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { trackPromise } from 'react-promise-tracker';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport {actShowNotify,actHideNotify} from \"./../actions/index\";\nimport {fetchWithDelay} from \"./../api/fetch\";\nimport {LoadingSpinnerComponent} from \"./../components/LoadingSpinnerComponent\";\nclass HomePage extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      covid19Items:[]            \n    }\n  }  \n  showCovid19List(covid19Items){ \n    let covid19Html=null;           \n    if(covid19Items.length > 0){\n      let trHtml=null;\n      trHtml=covid19Items.map((covid19Item,index)=>{\n        let covid19ItemDate=<Moment format=\"MM/DD/YYYY\">\n                {covid19Item.Date}\n            </Moment>\n        return (\n          <tr key={index}>            \n          <td >{covid19Item.Cases}</td>\n          <td >{covid19Item.City}</td>\n          <td >{covid19Item.CityCode}</td>\n          <td >{covid19Item.Country}</td>\n          <td >{covid19Item.CountryCode}</td>\n          <td >{covid19ItemDate}</td>\n          <td >{covid19Item.Lat}</td>\n          <td >{covid19Item.Lon}</td>\n          <td >{covid19Item.Province}</td>\n          <td >{covid19Item.Status}</td>        \n          </tr>\n        )\n      });\n      covid19Html= \n        (<table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">Cases</th>\n            <th scope=\"col\">City</th>\n            <th scope=\"col\">CityCode</th>\n            <th scope=\"col\">Country</th>\n            <th scope=\"col\">CountryCode</th>\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Lat</th>\n            <th scope=\"col\">Lon</th>\n            <th scope=\"col\">Province</th>\n            <th scope=\"col\">Status</th>\n          </tr>\n        </thead>\n        <tbody>          \n          {trHtml}\n        </tbody>\n        </table>);\n      \n    }else{\n      covid19Html= (<h3 className=\"text-center\">No data</h3>);\n      \n    }\n    return covid19Html;\n  }\n  setCovid19data(countrySlug){          \n    if(countrySlug !== \"\"){\n      let data=[];\n      let url=\"https://api.covid19api.com/country/\"+countrySlug+\"/status/confirmed\";\n    trackPromise(\n      fetchWithDelay(url,\"GET\")\n        .then((covid19DataResponse) => {                \n          if(covid19DataResponse.message == null){\n            data =covid19DataResponse.map((item,index)=>{            \n              return item;\n            });\n            this.setState({covid19Items:data});                    \n          }else{\n            this.setState({covid19Items:[]});                    \n          }          \n        })   \n    );\n    }  else{\n      this.setState({covid19Items:[]});                    \n    }       \n  }\n  componentWillMount(){    \n    let {query_country_name}=this.props;\n    this.setCovid19data(query_country_name);     \n  }\n  componentWillReceiveProps(nextProps) {     \n    let {query_country_name}=nextProps;      \n    this.setCovid19data(query_country_name);  \n  }\n\trender(){      \n      let {covid19Items}=this.state;                      \n  return (        \n    <div>                 \n      <LoadingSpinnerComponent />                                 \n      {this.showCovid19List(covid19Items)}\n    </div>\n  );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n      query_country_name: state.search,\n  }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\t\n  return {\t\t      \t\n    showNotify:()=>{\t\t\t\n      dispatch(actShowNotify());\n    },\n    hideNotify:()=>{\n      dispatch(actHideNotify());\n    }\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(HomePage);\n","export const fetchWithDelay = (url,method) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve(fetch(url, {\r\n          method: method,\r\n        })\r\n        .then((response) => response.json()));\r\n      }, 3000)\r\n    });\r\n    return promise;\r\n  }\r\n  ","import React from 'react';\nimport HomePage from \"./pages/HomePage\";\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,    \n    main: () => <HomePage />\n  },   \n];\nexport default routes;","import React, {Component} from 'react';\nimport FormSearch from \"./../components/FormSearch\";\nimport Notification from \"./../components/Notification\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route \n} from \"react-router-dom\";\nimport routes from './../route-config';\nclass App extends Component {    \n  render(){         \n    return (\n      <Router>\n        <div className=\"container\">\t\t\n        <div className=\"row\">\n          <div className=\"col\">\t                    \n          <FormSearch />          \n          <Notification />\n        {this.showRoute(routes)}\n        </div>\n        </div>\n        </div>\n      </Router>    \n    );\n  }\n  showRoute(routes){\n    let xhtml=null;\n    if(routes.length > 0){\n      xhtml=routes.map((route,index)=>{\n        return (\n          <Route key={index} exact={route.exact} path={route.path} component={route.main} />\n        );\n      });\n    }\n    return  <Switch>{xhtml}</Switch>;\n  }   \n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from './../constants/ActionType';\r\nlet defaultState = {\r\n\tisShow:false,\t\t\t\r\n};\r\nconst notify = (state = defaultState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase types.SHOW_NOTIFY:\t\t\t\r\n\t\t\tstate.isShow=true;\r\n\t\t\treturn {...state};\r\n\t\tcase types.HIDE_NOTIFY:\r\n\t\t\tstate.isShow=false;\r\n\t\t\treturn {...state};\t\t\t\r\n\t\tdefault:\t\t\t\r\n\t\t\treturn state;\r\n\t}\r\n}\r\nexport default notify;","import * as types from './../constants/ActionType';\r\n\r\nconst defaultState = '';\r\n\r\nconst search = (state = defaultState, action) => {\t\r\n\tswitch(action.type){\r\n\t\tcase types.CHANGE_SEARCH:\r\n\t\t\treturn action.query_country_name;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default search;","import {combineReducers} from 'redux';\nimport notify from \"./notify\";\nimport search from \"./search\";\nconst appReducers=combineReducers({\t\n    notify,\n    search,\n});\nexport default appReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport appReducers from './reducers/index';\nconst store =createStore(\n    appReducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}